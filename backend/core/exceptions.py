from rest_framework.views import exception_handler

def core_exception_handler(exc, context):
    '''
    If exception is thrown that we don't handle here, use default exception handler offered by DRF
    '''

    response = exception_handler(exc, context)
    handlers = {'ValidationError': _handler_generic_error}

    # Identifies type of current exception
    exception_class = exc.__class__.__name__

    if exception_class in handlers:
        # If this is an exception we can handle, handle it. Otherwise, use default response

        return handlers[exception_class](exc, context, response)

    return response

def _handler_generic_error(exc, context, response):
    # Just takes response generated by DRF and wraps it in 'errors' key

    response.data = {'errors': response.data}

    return response
    